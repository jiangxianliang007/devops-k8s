---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: gw-testnet-web3
  namespace: gw-testnet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gw-testnet-web3
      logging: 'true'
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gw-testnet-web3
        logging: 'true'
    spec:
      volumes:
        - name: gw-testnet-web3-env
          configMap:
            name: gw-testnet-web3-env
            defaultMode: 420
        - name: rate-limit-config
          configMap:
            name: testnet-web3-rate-limit-config
            defaultMode: 420
      initContainers:
        - name: setsysctl
          image: busybox
          command:
            - sh
            - '-c'
            - |
              sysctl -w net.core.somaxconn=1024
              sysctl -w net.ipv4.tcp_tw_reuse=1
              sysctl -w net.ipv4.tcp_max_tw_buckets=4096
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            privileged: true
      containers:
        - name: gw-testnet-web3
          image: 'ghcr.io/godwokenrises/godwoken-web3-prebuilds:v1.9.0-rc2'
          command:
            - bash
            - '-c'
            - |
              set -ex
              cd godwoken-web3
              # yarn knex migrate:latest
              yarn run build && yarn run start:prod
          ports:
            - name: http
              containerPort: 8024
              protocol: TCP
          resources:
            limits:
              memory: 2000Mi
            requests:
              memory: 300Mi
          volumeMounts:
            - name: gw-testnet-web3-env
              readOnly: true
              mountPath: /godwoken-web3/packages/api-server/.env
              subPath: .env
            - name: rate-limit-config
              readOnly: true
              mountPath: /godwoken-web3/packages/api-server/rate-limit-config.json
              subPath: rate-limit-config.json
          livenessProbe:
            exec:
              command:
                - sh
                - /godwoken-web3/scripts/health-check.sh
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - sleep 20
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        godwoken: testnet
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600